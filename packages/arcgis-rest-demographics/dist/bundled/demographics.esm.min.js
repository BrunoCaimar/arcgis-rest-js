/* @preserve
* @esri/arcgis-rest-demographics - v4.0.2 - Apache-2.0
* Copyright (c) 2017-2022 Esri, Inc.
* Tue Dec 27 2022 09:24:40 GMT-0800 (Pacific Standard Time)
*/
import{appendCustomParams as e,request as r,cleanUrl as a}from"@esri/arcgis-rest-request";const t="https://geoenrich.arcgis.com/arcgis/rest/services/World/geoenrichmentserver/Geoenrichment";function s(s){let n={},i=`${t}/countries`;return s?(s.endpoint&&(i=`${s.endpoint}/countries`),n=e(s,[],{params:Object.assign({},s.params)}),s.countryCode&&(i=`${i}/${s.countryCode}`)):n.params={},r(a(i),n).then((e=>e))}function n(s){let n={},i=`${t}/dataCollections`;return s?(s.endpoint&&(i=`${s.endpoint}/dataCollections`),n=e(s,["addDerivativeVariables","suppressNullValues"],{params:Object.assign({},s.params)}),n.params.addDerivativeVariables&&(n.params.addDerivativeVariables=JSON.stringify(n.params.addDerivativeVariables)),s.countryCode&&(i=`${i}/${s.countryCode}`,s.dataCollection&&(i=`${i}/${s.dataCollection}`))):n.params={},r(`${a(i)}`,n).then((e=>e))}function i(s){let n={},i=`${t}/StandardGeographyLevels`;return s?(s.endpoint&&(i=`${s.endpoint}/StandardGeographyLevels`),n=e(s,[],{params:Object.assign({},s.params)})):n.params={},r(`${a(i)}`,n).then((e=>e))}function o(t){const s=`${t.endpoint||"https://geoenrich.arcgis.com/arcgis/rest/services/World/geoenrichmentserver/StandardGeographyQuery"}/execute`,n=e(t,["sourceCountry","optionalCountryDataset","geographyLayers","geographyIDs","geographyQuery","returnSubGeographyLayer","subGeographyLayer","subGeographyQuery","outSR","returnGeometry","returnCentroids","generalizationLevel","useFuzzySearch","featureLimit","featureOffset","langCode"],{params:Object.assign({},t.params)});return t.authentication?(["geographyLayers","geographyIDs"].forEach((e=>{n.params[e]&&(n.params[e]=JSON.stringify(n.params[e]))})),r(`${a(s)}`,n).then((e=>e))):Promise.reject("Geoenrichment using the ArcGIS service requires authentication")}function c(s){const n=e(s,["studyAreas","dataCollections","analysisVariables","addDerivativeVariables","returnGeometry","inSR","outSR"],{params:Object.assign({},s.params)});return s.authentication?(["dataCollections","analysisVariables"].forEach((e=>{n.params[e]&&(n.params[e]=JSON.stringify(n.params[e]))})),r(`${a(`${s.endpoint||t}/enrich`)}`,n).then((e=>e))):Promise.reject("Geoenrichment using the ArcGIS service requires authentication")}export{s as getAvailableCountries,n as getAvailableDataCollections,i as getAvailableGeographyLevels,o as getGeography,c as queryDemographicData};
//# sourceMappingURL=demographics.esm.min.js.map
